// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OzonParserService.Infrastructure.Persistence;

#nullable disable

namespace OzonParserService.Infrastructure.Migrations
{
    [DbContext(typeof(OzonDbContext))]
    [Migration("20250428070048_AddOutboxMessageMigration")]
    partial class AddOutboxMessageMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OzonParserService.Domain.ParserTaskAggregate.ParsingTask", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<TimeSpan>("CheckInterval")
                        .HasColumnType("interval")
                        .HasColumnName("check_interval");

                    b.Property<string>("ExternalProductId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("external_product_id");

                    b.Property<DateTime>("LastRun")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_run");

                    b.Property<DateTime>("NextRun")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("next_run");

                    b.Property<string>("ProductUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("product_url");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_parser_tasks");

                    b.ToTable("parser_tasks", (string)null);
                });

            modelBuilder.Entity("OzonParserService.Infrastructure.Outbox.OutboxMessage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<string>("Error")
                        .HasColumnType("text")
                        .HasColumnName("error");

                    b.Property<DateTime>("OccuredOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("occured_on_utc");

                    b.Property<DateTime?>("ProcessedOnUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("processed_on_utc");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_outbox_messages");

                    b.ToTable("outbox_messages", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
